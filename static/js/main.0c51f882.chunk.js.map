{"version":3,"sources":["Components/Wrapper.js","Context.js","Components/WeatherSearch.js","Components/Content.js","Components/Header.js","Components/Sidebar.js","Components/WeatherData.js","Components/Error.js","Components/DaySelector.js","Components/TimeSelector.js","Components/Main.js","App.js","index.js"],"names":["WrapperStyle","styled","div","Wrapper","props","children","Context","createContext","WeatherForm","form","WeatherInput","input","WeatherSubmit","button","WeatherSymbol","WeatherSearch","api_call","useContext","onSubmit","placeholder","name","autoComplete","type","ContentStyle","Content","HeaderStyle","HeaderTitle","Header","city","date","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","display_date","SidebarStyle","Sidebar","WeatherDataStyle","WeatherIconContainer","WeatherIcon","img","WeatherDataContainer","TextStyle","fontSize","bold","WeatherData","weather","time","weather_icon_url","icon","temp","weather_type","main","day","getDay","src","alt","slice","convert_time","Error","error","DaySelectorStyle","DayContainer","selected","Temp","DaySelector","handleDayChange","forecast","useState","Object","keys","setSelected","handleChange","useCallback","useMemo","daysToDisplay","date_to_temp","Map","obj","i","weather_obj","weather_data","set","get","toFixed","push","id","key","onClick","toDateString","DaysToDisplay","TimeSelectorStyle","TimeContainer","TimeSelector","handleTimeChange","tt","timeToDisplay","time_to_display","TimeToDisplay","MainStyle","EmptyContainer","Main","setWeather","setForecast","setCity","setError","setDate","setTime","map_forecast_day_to_weather","forecast_list","response","first_time_set_flag","date_str","dt_txt","time_str","convert_date_to_string","e","a","preventDefault","location","target","elements","value","API_KEY","url","url2","request2","axios","request","data","list","console","log","useEffect","time_of_day","document","body","background","setBackgroundWeather","Provider","d","new_weather_obj","t","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0c51f882.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nconst WrapperStyle = styled.div`\n\theight: 100%;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tpadding: 0 10px;\n\tmargin: auto;\n`\n\nconst Wrapper = (props) => {\n\treturn (\n\t\t<WrapperStyle>\n\t\t\t{props.children}\n\t\t</WrapperStyle>\n\t)\n}\n\nexport default Wrapper","import {createContext} from 'react'\n\nconst Context = createContext()\n\nexport default Context","import React, {useContext} from \"react\";\nimport styled from 'styled-components'\n\nimport Context from \"../Context\";\n\nconst WeatherForm = styled.form`\n\tdisplay: flex;\n\twidth: 100%;\n\tmargin: 2em 0;\n`\nconst WeatherInput = styled.input`\n\tdisplay: inline-block;\n\twidth: 100%;\n\tborder: none;\n\tbackground: rgba(0, 0, 0, 0.05);\n\tpadding: 0.5rem 2rem;\n\tborder-radius: 2px;\n\t\n\t&:focus {\n\t\toutline: none;\n\t\tbox-shadow: -2px 0 0 gray;\n\t}\n`\n\nconst WeatherSubmit = styled.button`\n\tdisplay: inline-block;\n\ttext-align: center;\n\tborder: none;\n\tbackground-color: rgba(0, 0, 0, 0.05);\n\tfont-size: 1.5rem;\n\theight: auto;\n\twidth: 30px;\n\tposition: relative;\n    border-top-right-radius: 100%;\n    border-bottom-right-radius: 100%;\n}\n`\n\nconst WeatherSymbol = styled.div`\n\tcolor: gray;\n\tposition: absolute;\n\ttop: 50%;\n\tleft: 50%;\n\ttransform: translate(-50%, -50%);\n\t\n\t&:focus {\n\t\tbackground: pink;\n\t}\n`\n\nconst WeatherSearch = () => {\n\tconst {api_call} = useContext(Context)\n\n\treturn (\n\t\t<WeatherForm onSubmit={api_call}>\n\t\t\t<WeatherInput placeholder=\"Enter the name of the city to get started\" name=\"location\" autoComplete=\"off\" type=\"text\"/>\n\t\t\t<WeatherSubmit>\n\t\t\t\t<WeatherSymbol>&rarr;</WeatherSymbol>\n\t\t\t</WeatherSubmit>\n\t\t</WeatherForm>\n\t)\n}\n\nexport default WeatherSearch","import React from \"react\"\nimport styled from 'styled-components'\n\n\nconst ContentStyle = styled.div`\n\tbackground: rgba(255, 255, 255, 0.75);\n\twidth: 100%;\n\theight: 100%;\n\tpadding: 2em 2.5em;\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: space-between;\n`\nconst Content = props => (\n\t<ContentStyle>\n\t\t{props.children}\n\t</ContentStyle>\n)\n\nexport default Content","import React, {useContext} from 'react'\nimport styled from 'styled-components'\n\nimport Context from \"../Context\";\n\nconst HeaderStyle = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: space-between;\n\twidth: 100%;\n`\n\nconst HeaderTitle = styled.div`\n\tfont-size: 16px;\n\tcolor: rgba(0,0,0,.7);\n`\n\nconst Header = () => {\n\tconst {city, date} = useContext(Context)\n\tconst today = date ? new Date(date) : new Date()\n\tconst dd = String(today.getDate()).padStart(2, '0');\n\tconst mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n\tconst yyyy = today.getFullYear();\n\tconst display_date = `${dd}.${mm}.${yyyy}`\n\n\treturn (\n\t\t<HeaderStyle>\n\t\t\t<HeaderTitle>{city}</HeaderTitle>\n\t\t\t<HeaderTitle>{display_date}</HeaderTitle>\n\t\t</HeaderStyle>\n\t)\n}\n\nexport default Header","import React from 'react'\nimport styled from 'styled-components'\n\nconst SidebarStyle = styled.div`\n\twidth: 33.34%;\n\tbackground: rgba(0, 0, 0, 0.3);\n\theight: 100%;\n\tpadding: 2em 2.5em;\n`\n\n\nconst Sidebar = (props) => (\n\t<SidebarStyle>\n\t\t{props.children}\n\t</SidebarStyle>\n)\n\nexport default Sidebar","import React, {useContext} from \"react\";\nimport styled from 'styled-components'\n\nimport Context from \"../Context\";\n\nconst WeatherDataStyle = styled.div`\n\tdisplay: flex;\n\tflex-direction: row;\t\n\talign-items: center;\n\tjustify-content: center;\n\tflex-grow: 3;\n\tpadding: 0 2em;\n`\n\nconst WeatherIconContainer = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tposition: relative;\n\tmargin: 0 5em;\n`\n\nconst WeatherIcon = styled.img`\n\tposition: absolute;\n\ttop: -135px;\n\tright: -100px;\n\tfilter: drop-shadow(5px 7px 3px rgba(0,0,0,0.4));    \n`\n\nconst WeatherDataContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n`\n\nconst TextStyle = styled.div`\n\tfont-size: ${props => props.fontSize ?? '16px'};\n\tfont-wight: ${props => props.bold ?? 'normal'};\t\n`\n\nconst convert_time = (time) => {\n\treturn `${time.slice(0, 2)%12 || 12}${time.slice(2, 5)} ${time.slice(0, 2) >= 12 ? \"PM\" : \"AM\"}`\n}\n\nconst WeatherData = () => {\n\tconst {weather, date, time} = useContext(Context)\n\n\tconst weather_icon_url = `http://openweathermap.org/img/wn/${weather && weather.icon}@4x.png`\n\tconst temp = weather && weather.temp\n\tconst weather_type =  weather && weather.main\n\tconst today = new Date(date)\n\tconst day = today.getDay()\n\tconst weekday = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"]\n\n\treturn (\n\t\t<WeatherDataStyle>\n\t\t\t<WeatherIconContainer>\n\t\t\t\t<WeatherIcon src={weather_icon_url} alt=''/>\n\t\t\t\t<TextStyle fontSize ={'72px'} bold>{temp}&deg;C</TextStyle>\n\t\t\t</WeatherIconContainer>\n\t\t\t<WeatherDataContainer>\n\t\t\t\t{time && <TextStyle>{convert_time(time)}</TextStyle> }\n\t\t\t\t<TextStyle fontSize={'36px'} bold>{weekday[day]}</TextStyle>\n\t\t\t\t<TextStyle>{weather_type}</TextStyle>\n\t\t\t</WeatherDataContainer>\n\t\t</WeatherDataStyle>\n\n\t)\n}\n\nexport default WeatherData","import React from 'react'\n\nconst Error = ({error}) => (\n\t<div>{error}</div>\n)\n\nexport default Error","import React, {useContext, useState, useMemo, useCallback} from \"react\";\nimport styled from 'styled-components';\nimport Context from \"../Context\";\n\nconst DaySelectorStyle = styled.div`\n\tdisplay: flex;\n\tpadding: 1em 0 0.4em 0;\n\talign-items: center;\n\tjustify-content: center;\n`\n\nconst DayContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\theight: 40px;\n\twidth: 48px;\n\tpadding: 22px 8px;\n\tborder-radius: 30px;\n\tborder: ${props => props.selected ? '1px solid gray;' : 'none'};\n\theight: 100px;\n\talign-items: center;\n\tjustify-content: space-between;\n\tmargin: 0 30px;\n`\n\nconst Temp = styled.div`\n\tfont-size: 14px;\n\tfont-weight: bold;\n`\n\nconst DaysToDisplay = (forecast, selected, handleChange) => {\n\tlet daysToDisplay = []\n\n\tfor (let date in forecast.forecast) {\n\t\tlet date_to_temp = new Map()\n\t\tlet obj = forecast.forecast[date]\n\t\tlet i = 0;\n\t\tfor (let time in obj) {\n\t\t\tlet weather_obj = obj[time]\n\t\t\tif (weather_obj && weather_obj.weather_data) {\n\t\t\t\tdate_to_temp.set(date, (((date_to_temp.get(date) ?? 0)*i + weather_obj.weather_data.temp)/(i+1)).toFixed(0))\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t\tdaysToDisplay.push(\n\t\t\t<DayContainer id={date} key={date} onClick={() => handleChange(date)} selected={date===selected}>\n\t\t\t\t{new Date(date).toDateString().slice(0, 3)}\n\t\t\t\t<Temp>{date_to_temp.get(date)}&deg;C</Temp>\n\t\t\t</DayContainer>\n\t\t)\n\t}\n\n\treturn daysToDisplay\n}\n\nconst DaySelector = ({handleDayChange}) =>  {\n\tconst forecast = useContext(Context)\n\tconst [selected, setSelected] = useState(Object.keys(forecast.forecast)[0])\n\n\tconst handleChange = useCallback((date) => {\n\t\tsetSelected(date)\n\t\thandleDayChange(date)\n\t}, [setSelected, handleDayChange])\n\n\tconst dd = useMemo(() => DaysToDisplay(forecast, selected, handleChange)\n\t, [forecast, selected, handleChange])\n\n\treturn <DaySelectorStyle>{dd}</DaySelectorStyle>\n}\n\nexport default DaySelector","import React, {useContext, useState, useMemo, useCallback} from \"react\";\nimport styled from 'styled-components';\nimport Context from \"../Context\";\n\nconst TimeSelectorStyle = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: flex-end;\n\tjustify-content: center;\n\theight: 100%;\n\twidth: 100%;\n`\n\nconst TimeContainer = styled.div`\n\tdisplay: flex;\n\tborder: ${props => props.selected ? '1px solid white' : 'none'};\n\talign-items: center;\n\tjustify-content: space-between;\n\tmargin: 15px 0;\n\twidth: 75%;\n\tpadding: 8px 22px;\n\tborder-radius: 30px;\n\tcolor: white;\n`\n\nconst Temp = styled.div`\n\tfont-size: 14px;\n\tfont-weight: bold;\n`\n\nconst convert_time = (time) => {\n\treturn `${time.slice(0, 2)%12 || 12}${time.slice(2, 5)} ${time.slice(0, 2) >= 12 ? \"PM\" : \"AM\"}`\n}\n\nconst TimeToDisplay = (forecast, selected, handleChange) => {\n\tlet timeToDisplay = []\n\n\tfor (let time in forecast) {\n\t\tconst weather_obj = forecast[time]\n\t\tconst time_to_display = convert_time(time)\n\n\t\ttimeToDisplay.push(\n\t\t\t<TimeContainer id={time} key={time} onClick={() => handleChange(time)} selected={time===selected}>\n\t\t\t\t{time_to_display}\n\t\t\t\t<Temp>{weather_obj.weather_data.temp.toFixed(0)}&deg;C</Temp>\n\t\t\t</TimeContainer>\n\t\t)\n\t}\n\n\treturn timeToDisplay\n}\n\nconst TimeSelector = ({handleTimeChange}) => {\n\tconst {forecast, date, time} = useContext(Context)\n\n\tconst [selected, setSelected] = useState(time)\n\n\tconst handleChange = useCallback((time) => {\n\t\tsetSelected(time)\n\t\thandleTimeChange(time)\n\t}, [setSelected, handleTimeChange])\n\n\tconst tt = useMemo(() => TimeToDisplay(forecast[date], selected, handleChange)\n\t\t, [forecast, date, selected, handleChange])\n\treturn <TimeSelectorStyle>{tt}</TimeSelectorStyle>\n}\n\nexport default TimeSelector","import React, {useEffect, useState} from \"react\"\nimport styled from 'styled-components'\nimport axios from 'axios'\n\nimport Context from \"../Context\";\n\nimport WeatherSearch from \"./WeatherSearch\";\nimport Content from \"./Content\";\nimport Header from \"./Header\";\nimport Sidebar from \"./Sidebar\";\nimport WeatherData from \"./WeatherData\";\nimport Error from \"./Error\";\nimport DaySelector from \"./DaySelector\";\nimport TimeSelector from \"./TimeSelector\";\n\n\nconst MainStyle = styled.div`\n\theight: 80vh;\n\tbox-shadow: 0px 13px 40px -13px rgba(0,0,0,0.75);\n\twidth: 85%;\n\tmargin: 0 auto;\n\tposition: absolute;\n\ttop: 50%;\n\tleft: 50%;\n\ttransform: translate(-50%, -50%);\n\tborder-radius: 3px;\n\toverflow: hidden;\n\tdisplay: flex;\n`\n\nconst EmptyContainer = styled.div`\n\tflex-grow: 1;\n`\n\n\nconst Main = () => {\n\tconst [weather, setWeather] = useState()\n\tconst [forecast, setForecast] = useState()\n\tconst [city, setCity] = useState()\n\tconst [error, setError] = useState()\n\tconst [date, setDate] = useState()   // day mapping => [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"]\n\tconst [time, setTime] = useState()\n\n\tconst map_forecast_day_to_weather = (forecast_list) => {\n\t\tlet response = {}\n\t\tlet first_time_set_flag = false;\n\n\t\tfor (let key in forecast_list) {\n\t\t\tconst obj = forecast_list[key]\n\t\t\tconst weather_data = {...obj.main, ...obj.weather[0]}\n\t\t\tconst date_str = obj.dt_txt.slice(0, 10)\n\t\t\tconst time_str = obj.dt_txt.slice(11)\n\t\t\tif (!first_time_set_flag) {\n\t\t\t\tsetTime(time_str)\n\t\t\t\tfirst_time_set_flag = true\n\t\t\t}\n\t\t\tresponse = {\n\t\t\t\t...response,\n\t\t\t\t[date_str]: {\n\t\t\t\t\t...response[date_str],\n\t\t\t\t\t[time_str]: { weather_data }\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn response\n\t}\n\n\tconst convert_date_to_string = (date) => {\n\t\tconst dd = String(date.getDate()).padStart(2, '0');\n\t\tconst mm = String(date.getMonth() + 1).padStart(2, '0'); //January is 0!\n\t\tconst yyyy = date.getFullYear();\n\t\tconst display_date = `${yyyy}-${mm}-${dd}`\n\t\treturn display_date\n\t}\n\n\tconst api_call = async e => {\n\t\te.preventDefault()\n\n\t\tconst location = e.target.elements.location.value\n\t\tif (!location) {\n\t\t\tsetError(\"Please enter the name of the city.\")\n\t\t\tsetWeather(null)\n\t\t\tsetCity(null)\n\t\t\treturn\n\t\t}\n\n\t\tconst API_KEY = 'b924be4d69eac0e8eef619e2bd530262'\n\n\t\tconst url = `https://api.openweathermap.org/data/2.5/weather?units=metric&q=${location}&appid=${API_KEY}`\n\t\tconst url2 = `https://api.openweathermap.org/data/2.5/forecast?units=metric&q=${location}&appid=${API_KEY}`\n\n\t\t// api call for forecast\n\t\tconst request2 = axios.get(url2)\n\t\t// api call of weather\n\t\tconst request = axios.get(url)\n\n\t\t// response for weather\n\t\ttry {\n\t\t\tconst response = await request\n\t\t\tsetWeather({...response.data.weather[0], ...response.data.main})\n\t\t\tsetCity(response.data.name)\n\t\t\tsetDate(convert_date_to_string(new Date()))\n\t\t\tsetError(null)\n\t\t} catch (err) {\n\t\t\tsetError(\"Please enter valid city name.\")\n\t\t\tsetWeather(null)\n\t\t\tsetCity(null)\n\t\t}\n\n\t\t// response for forecast\n\t\ttry {\n\t\t\tconst response = await request2\n\t\t\tsetForecast(map_forecast_day_to_weather(response.data.list))\n\t\t\tsetError(null)\n\t\t} catch (err) {\n\t\t\tsetError(\"Enter valid city name.\")\n\t\t\tconsole.log(err)\n\t\t\tsetWeather(null)\n\t\t\tsetCity(null)\n\t\t\tsetForecast(null)\n\t\t}\n\t}\n\n\tconst setBackgroundWeather = () => {\n\t\tconst time_of_day = weather && weather.icon.slice(-1)==='d' ? 'day' : 'night'\n\t\tif (document.body) {\n\t\t\tdocument.body.background = `https://source.unsplash.com/1600x900/?${weather ? weather.main : time_of_day},${time_of_day}`;\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\tsetBackgroundWeather()\n\t})\n\n\tconst handleDayChange = (d) => {\n\t\tlet new_weather_obj = forecast[d][Object.keys(forecast[d])[0]].weather_data\n\t\tsetDate(d)\n\t\tsetTime(Object.keys(forecast[d])[0])\n\t\tsetWeather(new_weather_obj)\n\t}\n\n\tconst handleTimeChange = (t) => {\n\t\tlet new_weather_obj = forecast[date][t].weather_data\n\t\tsetTime(t)\n\t\tsetWeather(new_weather_obj)\n\t}\n\n\treturn (\n\t\t<MainStyle>\n\t\t\t<Content>\n\t\t\t\t<Context.Provider value={{ api_call, weather, city, forecast, date, time}} >\n\t\t\t\t\t<EmptyContainer>\n\t\t\t\t\t\t<Header />\n\t\t\t\t\t\t<WeatherSearch />\n\t\t\t\t\t</EmptyContainer>\n\t\t\t\t\t{ weather && <WeatherData /> }\n\t\t\t\t\t{ forecast && <DaySelector handleDayChange={handleDayChange}/> }\n\t\t\t\t\t{ error && <Error error={error} /> }\n\t\t\t\t</Context.Provider>\n\t\t\t</Content>\n\t\t\t<Sidebar>\n\t\t\t\t<Context.Provider value={{forecast, date, time}} >\n\t\t\t\t\t{ forecast && <TimeSelector handleTimeChange={handleTimeChange} /> }\n\t\t\t\t</Context.Provider>\n\t\t\t</Sidebar>\n\t\t</MainStyle>\n\t)\n}\n\nexport default Main","import React from 'react';\nimport Wrapper from \"./Components/Wrapper\";\nimport Main from \"./Components/Main\";\n\nconst App = () => {\n\treturn (\n\t\t<Wrapper>\n\t\t\t<Main />\n\t\t</Wrapper>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport App from './App';\n\nReactDOM.render( <React.StrictMode> <App /> </React.StrictMode>, document.getElementById('root') );"],"sourceRoot":""}