{"version":3,"sources":["Components/Wrapper.js","Context.js","Components/WeatherSearch.js","Components/Content.js","Components/Header.js","Components/Sidebar.js","Components/WeatherData.js","Components/Error.js","Components/DaySelector.js","Components/Main.js","App.js","index.js"],"names":["WrapperStyle","styled","div","Wrapper","props","children","Context","createContext","WeatherForm","form","WeatherInput","input","WeatherSubmit","button","WeatherSymbol","WeatherSearch","api_call","useContext","onSubmit","placeholder","name","autoComplete","type","ContentStyle","Content","HeaderStyle","HeaderTitle","Header","city","date","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","display_date","SidebarStyle","Sidebar","WeatherDataStyle","WeatherIconContainer","WeatherIcon","img","WeatherDataContainer","TextStyle","fontSize","bold","WeatherData","weather","weather_icon_url","icon","temp","weather_type","main","day","getDay","hours","getHours","minutes","getMinutes","ampm","time","src","alt","Error","error","DaySelectorStyle","DayContainer","selected","DaySelector","handleDayChange","forecast","useState","Object","keys","setSelected","handleChange","useCallback","useMemo","daysToDisplay","push","id","key","onClick","toDateString","slice","DaysToDisplay","MainStyle","EmptyContainer","Main","setWeather","setForecast","setCity","setError","setDate","map_forecast_day_to_weather","forecast_list","response","obj","weather_data","date_str","dt_txt","time_str","e","a","preventDefault","location","target","elements","value","API_KEY","url","url2","request2","axios","get","request","data","list","console","log","currentTime","document","body","background","Provider","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1daccdaa.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nconst WrapperStyle = styled.div`\n\theight: 100%;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tpadding: 0 10px;\n\tmargin: auto;\n`\n\nconst Wrapper = (props) => {\n\treturn (\n\t\t<WrapperStyle>\n\t\t\t{props.children}\n\t\t</WrapperStyle>\n\t)\n}\n\nexport default Wrapper","import {createContext} from 'react'\n\nconst Context = createContext()\n\nexport default Context","import React, {useContext} from \"react\";\nimport styled from 'styled-components'\n\nimport Context from \"../Context\";\n\nconst WeatherForm = styled.form`\n\tdisplay: flex;\n\twidth: 100%;\n\tmargin: 2em 0;\n`\nconst WeatherInput = styled.input`\n\tdisplay: inline-block;\n\twidth: 100%;\n\tborder: none;\n\tbackground: rgba(0, 0, 0, 0.05);\n\tpadding: 0.5rem 2rem;\n\tborder-radius: 2px;\n\t\n\t&:focus {\n\t\toutline: none;\n\t\tbox-shadow: -2px 0 0 gray;\n\t}\n`\n\nconst WeatherSubmit = styled.button`\n\tdisplay: inline-block;\n\ttext-align: center;\n\tborder: none;\n\tbackground-color: rgba(0, 0, 0, 0.05);\n\tfont-size: 1.5rem;\n\theight: auto;\n\twidth: 30px;\n\tposition: relative;\n    border-top-right-radius: 100%;\n    border-bottom-right-radius: 100%;\n}\n`\n\nconst WeatherSymbol = styled.div`\n\tcolor: gray;\n\tposition: absolute;\n\ttop: 50%;\n\tleft: 50%;\n\ttransform: translate(-50%, -50%);\n\t\n\t&:focus {\n\t\tbackground: pink;\n\t}\n`\n\nconst WeatherSearch = () => {\n\tconst {api_call} = useContext(Context)\n\n\treturn (\n\t\t<WeatherForm onSubmit={api_call}>\n\t\t\t<WeatherInput placeholder=\"Enter the name of the city to get started\" name=\"location\" autoComplete=\"off\" type=\"text\"/>\n\t\t\t<WeatherSubmit>\n\t\t\t\t<WeatherSymbol>&rarr;</WeatherSymbol>\n\t\t\t</WeatherSubmit>\n\t\t</WeatherForm>\n\t)\n}\n\nexport default WeatherSearch","import React from \"react\"\nimport styled from 'styled-components'\n\n\nconst ContentStyle = styled.div`\n\tbackground: rgba(255, 255, 255, 0.75);\n\twidth: 100%;\n\theight: 100%;\n\tpadding: 2em 2.5em;\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: space-between;\n`\nconst Content = props => (\n\t<ContentStyle>\n\t\t{props.children}\n\t</ContentStyle>\n)\n\nexport default Content","import React, {useContext} from 'react'\nimport styled from 'styled-components'\n\nimport Context from \"../Context\";\n\nconst HeaderStyle = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: space-between;\n\twidth: 100%;\n`\n\nconst HeaderTitle = styled.div`\n\tfont-size: 16px;\n\tcolor: rgba(0,0,0,.7);\n`\n\nconst Header = () => {\n\tconst {city, date} = useContext(Context)\n\tconst today = new Date(date)\n\tconst dd = String(today.getDate()).padStart(2, '0');\n\tconst mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n\tconst yyyy = today.getFullYear();\n\tconst display_date = `${dd}.${mm}.${yyyy}`\n\n\treturn (\n\t\t<HeaderStyle>\n\t\t\t<HeaderTitle>{city}</HeaderTitle>\n\t\t\t<HeaderTitle>{display_date}</HeaderTitle>\n\t\t</HeaderStyle>\n\t)\n}\n\nexport default Header","import React from 'react'\nimport styled from 'styled-components'\n\nconst SidebarStyle = styled.div`\n\twidth: 33.34%;\n\tbackground: rgba(240, 240, 240, 0.3);\n\theight: 100%;\n`\n\n\nconst Sidebar = (props) => (\n\t<SidebarStyle>\n\t\t<h1>Hellow</h1>\n\t</SidebarStyle>\n)\n\nexport default Sidebar","import React, {useContext} from \"react\";\nimport styled from 'styled-components'\n\nimport Context from \"../Context\";\n\nconst WeatherDataStyle = styled.div`\n\tdisplay: flex;\n\tflex-direction: row;\t\n\talign-items: center;\n\tjustify-content: center;\n\tflex-grow: 3;\n\tpadding: 0 2em;\n`\n\nconst WeatherIconContainer = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tposition: relative;\n\tmargin: 0 5em;\n`\n\nconst WeatherIcon = styled.img`\n\tposition: absolute;\n\ttop: -135px;\n\tright: -100px;\n\tfilter: drop-shadow(5px 7px 3px rgba(0,0,0,0.4));    \n`\n\nconst WeatherDataContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n`\n\nconst TextStyle = styled.div`\n\tfont-size: ${props => props.fontSize ?? '16px'};\n\tfont-wight: ${props => props.bold ?? 'normal'};\t\n`\n\nconst WeatherData = () => {\n\tconst weather = useContext(Context)\n\t// console.log(\"weather\", weather)\n\n\tconst weather_icon_url = `http://openweathermap.org/img/wn/${weather && weather.weather && weather.weather.icon}@4x.png`\n\tconst temp = weather && weather.weather && weather.weather.temp\n\tconst weather_type =  weather && weather.weather && weather.weather.main\n\tconst today = new Date()\n\tconst day = today.getDay()\n\tconst weekday = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"]\n\tconst hours = (today.getHours() % 12) || 12;\n\tconst minutes = today.getMinutes() < 10 ? '0'+today.getMinutes() : today.getMinutes();\n\tconst ampm = hours >= 12 ? 'PM' : 'AM';\n\tconst time = `${hours}:${minutes} ${ampm}`\n\n\treturn (\n\t\t<WeatherDataStyle>\n\t\t\t<WeatherIconContainer>\n\t\t\t\t<WeatherIcon src={weather_icon_url} alt=''/>\n\t\t\t\t<TextStyle fontSize ={'72px'} bold>{temp}&deg;C</TextStyle>\n\t\t\t</WeatherIconContainer>\n\t\t\t<WeatherDataContainer>\n\t\t\t\t<TextStyle>{time}</TextStyle>\n\t\t\t\t<TextStyle fontSize={'36px'} bold>{weekday[day]}</TextStyle>\n\t\t\t\t<TextStyle>{weather_type}</TextStyle>\n\t\t\t</WeatherDataContainer>\n\t\t</WeatherDataStyle>\n\n\t)\n}\n\nexport default WeatherData","import React from 'react'\n\nconst Error = ({error}) => (\n\t<div>{error}</div>\n)\n\nexport default Error","import React, {useContext, useState, useEffect, useMemo, useCallback} from \"react\";\nimport styled from 'styled-components';\nimport Context from \"../Context\";\n\nconst DaySelectorStyle = styled.div`\n\tdisplay: flex;\n\tpadding: 1em 0 0.4em 0;\n\talign-items: center;\n\tjustify-content: center;\n\t\n\t.selected_day {\n\t\tborder: 1px solid gray;\n\t}\n`\n\nconst DayContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\theight: 40px;\n\twidth: 48px;\n\tpadding: 16px 8px;\n\tborder-radius: 30px;\n\tborder: ${props => props.selected ? '1px solid gray' : 'none'};\n\theight: 100px;\n\talign-items: center;\n\tjustify-content: space-between;\n\tmargin: 0 30px;\n`\n\n\nconst DaysToDisplay = (forecast, selected, handleChange) => {\n\tlet daysToDisplay = []\n\n\tfor (let date in forecast.forecast) {\n\t\tdaysToDisplay.push(<DayContainer id={date} key={date} onClick={() => handleChange(date)} selected={date===selected}>{new Date(date).toDateString().slice(0, 3)}</DayContainer>)\n\t\t// console.log(\"dah\", daysToDisplay)\n\t}\n\n\treturn daysToDisplay\n}\n\nconst DaySelector = ({handleDayChange}) =>  {\n\tconst forecast = useContext(Context)\n\tconst [selected, setSelected] = useState(Object.keys(forecast.forecast)[0])\n\n\tconst handleChange = useCallback((date) => {\n\t\tsetSelected(date)\n\t\thandleDayChange(date)\n\t}, [setSelected, handleDayChange])\n\n\tconst dd = useMemo(() => DaysToDisplay(forecast, selected, handleChange)\n\t, [forecast, selected, handleChange])\n\n\t// useEffect(() => {\n\t// \t// console.log(Object.keys(forecast.forecast)[0])\n\t// \tlet day_dom = document.getElementById(Object.keys(forecast.forecast)[0])\n\t// \tday_dom.setAttribute(\"class\", day_dom.className + \" selected_day\")\n\t// }, [])\n\n\t// console.log(dd)\n\treturn (\n\t\t<DaySelectorStyle>{dd}</DaySelectorStyle>\n\t)\n}\n\nexport default DaySelector","import React, {useState} from \"react\"\nimport styled from 'styled-components'\nimport axios from 'axios'\n\nimport Context from \"../Context\";\n\nimport WeatherSearch from \"./WeatherSearch\";\nimport Content from \"./Content\";\nimport Header from \"./Header\";\nimport Sidebar from \"./Sidebar\";\nimport WeatherData from \"./WeatherData\";\nimport Error from \"./Error\";\nimport DaySelector from \"./DaySelector\";\n\n\nconst MainStyle = styled.div`\n\theight: 80vh;\n\tbox-shadow: 0px 13px 40px -13px rgba(0,0,0,0.75);\n\twidth: 85%;\n\tmargin: 0 auto;\n\tposition: absolute;\n\ttop: 50%;\n\tleft: 50%;\n\ttransform: translate(-50%, -50%);\n\tborder-radius: 3px;\n\toverflow: hidden;\n\tdisplay: flex;\n`\n\nconst EmptyContainer = styled.div`\n\tflex-grow: 1;\n`\n\n\nconst Main = () => {\n\tconst [weather, setWeather] = useState()\n\tconst [forecast, setForecast] = useState()\n\tconst [city, setCity] = useState()\n\tconst [error, setError] = useState()\n\tconst [date, setDate] = useState()   // day mapping => [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"]\n\n\tconst map_forecast_day_to_weather = (forecast_list) => {\n\t\tlet response = {}\n\n\t\tfor (let key in forecast_list) {\n\t\t\tconst obj = forecast_list[key]\n\t\t\tconst weather_data = {...obj.main, ...obj.weather[0]}\n\t\t\tconst date_str = obj.dt_txt.slice(0, 10)\n\t\t\tconst time_str = obj.dt_txt.slice(11)\n\t\t\tresponse = {\n\t\t\t\t...response,\n\t\t\t\t[date_str]: {\n\t\t\t\t\t...response[date_str],\n\t\t\t\t\t[time_str]: { weather_data }\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn response\n\t}\n\n\tconst api_call = async e => {\n\t\te.preventDefault()\n\n\t\tconst location = e.target.elements.location.value\n\t\tif (!location) {\n\t\t\tsetError(\"Please enter the name of the city.\")\n\t\t\tsetWeather(null)\n\t\t\tsetCity(null)\n\t\t\treturn\n\t\t}\n\n\t\tconst API_KEY = 'b924be4d69eac0e8eef619e2bd530262'\n\n\t\tconst url = `https://api.openweathermap.org/data/2.5/weather?units=metric&q=${location}&appid=${API_KEY}`\n\t\tconst url2 = `https://api.openweathermap.org/data/2.5/forecast?units=metric&q=${location}&appid=${API_KEY}`\n\n\t\t// api call for forecast\n\t\tconst request2 = axios.get(url2)\n\t\t// api call of weather\n\t\tconst request = axios.get(url)\n\n\t\t// response for weather\n\t\ttry {\n\t\t\tconst response = await request\n\t\t\tsetWeather({...response.data.weather[0], ...response.data.main})\n\t\t\tsetCity(response.data.name)\n\t\t\tsetDate(new Date().toDateString())\n\t\t\tsetError(null)\n\t\t} catch (err) {\n\t\t\tsetError(\"Please enter valid city name.\")\n\t\t\tsetWeather(null)\n\t\t\tsetCity(null)\n\t\t}\n\n\t\t// response for forecast\n\t\ttry {\n\t\t\tconst response = await request2\n\t\t\tsetForecast(map_forecast_day_to_weather(response.data.list))\n\t\t\tsetError(null)\n\t\t} catch (err) {\n\t\t\tsetError(\"Forecast error\")\n\t\t\tconsole.log(err)\n\t\t\tsetWeather(null)\n\t\t\tsetCity(null)\n\t\t}\n\t}\n\n\tconst currentTime = new Date().getHours()\n\tif (document.body) {\n\t\tif (7 <= currentTime && currentTime < 20) {\n\t\t\tdocument.body.background = \"https://source.unsplash.com/1600x900/?sun\";\n\t\t}\n\t\telse {\n\t\t\tdocument.body.background = \"https://source.unsplash.com/1600x900/?moon\";\n\t\t}\n\t}\n\n\tconst handleDayChange = (date) => {\n\t\tconsole.log(\"day changed\", date)\n\n\t}\n\n\treturn (\n\t\t<MainStyle>\n\t\t\t<Content>\n\t\t\t\t<Context.Provider value={{ api_call, weather, city, forecast, date}} >\n\t\t\t\t\t<EmptyContainer>\n\t\t\t\t\t\t<Header />\n\t\t\t\t\t\t<WeatherSearch />\n\t\t\t\t\t</EmptyContainer>\n\t\t\t\t\t{ weather && <WeatherData /> }\n\t\t\t\t\t{ forecast && <DaySelector handleDayChange={handleDayChange}/> }\n\t\t\t\t\t{ error && <Error error={error} /> }\n\t\t\t\t</Context.Provider>\n\t\t\t</Content>\n\t\t\t<Sidebar />\n\t\t</MainStyle>\n\t)\n}\n\nexport default Main","import React from 'react';\nimport Wrapper from \"./Components/Wrapper\";\nimport Main from \"./Components/Main\";\n\nconst App = () => {\n\treturn (\n\t\t<Wrapper>\n\t\t\t<Main />\n\t\t</Wrapper>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport App from './App';\n\nReactDOM.render( <React.StrictMode> <App /> </React.StrictMode>, document.getElementById('root') );"],"sourceRoot":""}